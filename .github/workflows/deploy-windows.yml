name: deploy-windows
on:
  push:
    branches:
      - no_client_mode
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ windows-latest ]
        conda_platform: [ win-64 ]
        artifact_name: [ gemsgui-windows ]

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Timestamp  # Idea from https://tinyurl.com/47wz7vpv
        id: timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d" UTC)
          message("::set-output name=now::${current_date}")

      - name: Get version from CMakeLists.txt
        id: get_version
        uses: DarwinInnovation/cmake-project-version-action@v1.0

      - name: Use version
        run: echo "The project version is ${{ steps.get_version.outputs.version }}"

      - name: Set deploy name
        id: strings
        shell: bash
        run: >
          echo "deploy-name=GEMS${{ steps.get_version.outputs.version }}" >> "$GITHUB_OUTPUT"

      - name: Set deploy dir
        id: strings2
        shell: bash
        run: >
          echo "deploy-output-dir=${{ github.workspace }}/${{ steps.strings.outputs.deploy-name }}/Gems3-app" >> "$GITHUB_OUTPUT"
          echo "deploy-output-name=windows-${{ steps.strings.outputs.deploy-name }}.zip" >> "$GITHUB_OUTPUT"

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          channels: conda-forge, defaults
          channel-priority: true

      - name: Configuring Conda Environment
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda config --add channels conda-forge
          conda install conda-devenv
          conda devenv

      - name: Building, Testing & Installing GEMSGUI (Windows)
        shell: cmd
        run: |
          call conda activate GEMSGUI || goto :eof
          call conda-install-dependencies.bat || goto :eof
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{ steps.strings2.outputs.deploy-output-dir }} -A x64 -S . -B build  || goto :eof
          cmake --build build --target install --config Release || goto :eof

      - name: Check deploy
        run: |
          cd C:/Miniconda/envs/GEMSGUI/Library/bin
          ls
          cd ${{ steps.strings2.outputs.deploy-output-dir }}
          ls

      - name: Zipping files and folders
        shell: cmd
        run: |
          cd ${{ github.workspace }}
          7z a ${{ steps.strings2.outputs.deploy-output-name }} ${{ steps.strings.outputs.deploy-name }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ steps.strings.outputs.deploy-name }}
          path: ${{ steps.strings2.outputs.deploy-output-name }}

